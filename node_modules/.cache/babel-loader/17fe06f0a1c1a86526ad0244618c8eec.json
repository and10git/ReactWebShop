{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Proyectos\\\\and10Git_OK\\\\ReactUTN\\\\TP1\\\\tp1\\\\src\\\\Pages\\\\Registro.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Card, Form, Button, Spinner, Alert } from 'react-bootstrap';\nimport firebase from \"../Config/firebase\";\nimport ButtonWithLoading from \"../Components/Forms/ButtonWithLoading\";\nimport FormGroup from \"../Components/Forms/FormGroup\";\nimport '../Styles/App.css';\nconst styles = {\n  formulario: {\n    backgroundColor: \"red\"\n  }\n};\n\nfunction Registro() {\n  _s();\n\n  const [form, setForm] = useState({\n    nombre: '',\n    apellido: '',\n    email: '',\n    password: ''\n  });\n  const [error, setError] = useState({\n    nombre: '',\n    apellido: '',\n    email: '',\n    password: ''\n  });\n  const [spinner, setSpinner] = useState(false);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (form.nombre == \"\") {\n      setError({ ...error,\n        nombre: \"El campo nombre es obligatorio\"\n      });\n      return;\n    }\n\n    setSpinner(true);\n    let email = form.email;\n    let password = form.password;\n    firebase.auth.createUserWithEmailAndPassword(email, password).then(data => {\n      console.log(\"Usuario creado correctamente\", data.user.uid);\n      firebase.db.collection(\"usuarios\").add({\n        nombre: form.nombre,\n        apellido: form.apellido,\n        email: form.email,\n        userId: data.user.uid //id creado en autenticacion\n\n      }).then(data => {\n        setSpinner(false);\n        console.log(data); //history.push(\"/login\");\n      }).catch(err => {\n        console.log(err);\n        setSpinner(false);\n      });\n    }).catch(error => {\n      //setAlert({variant:\"danger\",text:\"Error: \" + error})\n      console.log(\"Error\", error);\n      setSpinner(false);\n    });\n  };\n\n  const handleChange = e => {\n    const target = e.target;\n    const value = target.value;\n    const name = target.name;\n    setForm({ ...form,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      width: '30%',\n      margin: 'auto',\n      align: \"left\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          label: \"Nombre\",\n          type: \"text\",\n          placeholder: \"Ingrese su nombre\",\n          name: \"nombre\",\n          value: form.nombre,\n          change: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          label: \"Apellido\",\n          type: \"text\",\n          placeholder: \"Ingrese su apellido\",\n          name: \"apellido\",\n          value: form.apellido,\n          change: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          label: \"Email\",\n          type: \"email\",\n          placeholder: \"Ingrese su email\",\n          name: \"email\",\n          value: form.email,\n          change: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          label: \"Contrase\\xF1a\",\n          type: \"password\",\n          placeholder: \"Ingrese su contrase\\xF1a\",\n          name: \"password\",\n          value: form.password,\n          change: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ButtonWithLoading, {\n          text: \"Registrarse\",\n          loading: spinner\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Registro, \"9qIufo0w3BFI5f7vP+IS2GqmKEI=\");\n\n_c = Registro;\nexport default Registro;\n\nvar _c;\n\n$RefreshReg$(_c, \"Registro\");","map":{"version":3,"sources":["C:/Proyectos/and10Git_OK/ReactUTN/TP1/tp1/src/Pages/Registro.jsx"],"names":["React","useState","Card","Form","Button","Spinner","Alert","firebase","ButtonWithLoading","FormGroup","styles","formulario","backgroundColor","Registro","form","setForm","nombre","apellido","email","password","error","setError","spinner","setSpinner","handleSubmit","e","preventDefault","auth","createUserWithEmailAndPassword","then","data","console","log","user","uid","db","collection","add","userId","catch","err","handleChange","target","value","name","width","margin","align"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Card, Form, Button, Spinner, Alert } from 'react-bootstrap';\nimport firebase from \"../Config/firebase\"\nimport ButtonWithLoading from \"../Components/Forms/ButtonWithLoading\"\nimport FormGroup from \"../Components/Forms/FormGroup\"\nimport '../Styles/App.css';\n\nconst styles = {\n  formulario: {\n    backgroundColor: \"red\"\n  }\n}\nfunction Registro() {\n  const [form, setForm] = useState({ nombre: '', apellido: '', email: '', password: '' });\n  const [error, setError] = useState({ nombre: '', apellido: '', email: '', password: '' });\n  const [spinner, setSpinner] = useState(false);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (form.nombre == \"\") {\n      setError({\n        ...error,\n        nombre: \"El campo nombre es obligatorio\"\n      })\n      return;\n    }\n    setSpinner(true);\n    let email = form.email;\n    let password = form.password;\n\n    firebase.auth.createUserWithEmailAndPassword(email, password)\n      .then((data) => {\n        console.log(\"Usuario creado correctamente\", data.user.uid)\n        firebase.db.collection(\"usuarios\").add(\n          {\n            nombre: form.nombre,\n            apellido: form.apellido,\n            email: form.email,\n            userId: data.user.uid //id creado en autenticacion\n          })\n          .then((data) => {\n            setSpinner(false);\n            console.log(data)\n            //history.push(\"/login\");\n          })\n          .catch((err) => {\n            console.log(err)\n            setSpinner(false);\n          })\n      })\n      .catch((error) => {\n        //setAlert({variant:\"danger\",text:\"Error: \" + error})\n        console.log(\"Error\", error)\n        setSpinner(false);        \n      })\n  }\n\n  const handleChange = (e) => {\n    const target = e.target;\n    const value = target.value\n    const name = target.name;\n    setForm({\n      ...form,\n      [name]: value\n    });\n  }\n\n  return (\n    <Card style={{ width: '30%', margin: 'auto', align:\"left\"}}>\n      <Card.Body>\n        <Form onSubmit={handleSubmit}>\n          <FormGroup label=\"Nombre\" type=\"text\" placeholder=\"Ingrese su nombre\" name=\"nombre\" value={form.nombre} change={handleChange} />\n          <FormGroup label=\"Apellido\" type=\"text\" placeholder=\"Ingrese su apellido\" name=\"apellido\" value={form.apellido} change={handleChange} />\n          <FormGroup label=\"Email\" type=\"email\" placeholder=\"Ingrese su email\" name=\"email\" value={form.email} change={handleChange} />\n          <FormGroup label=\"Contraseña\" type=\"password\" placeholder=\"Ingrese su contraseña\" name=\"password\" value={form.password} change={handleChange} />\n          <ButtonWithLoading text=\"Registrarse\" loading={spinner} />\n        </Form>\n\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default Registro;"]},"metadata":{},"sourceType":"module"}